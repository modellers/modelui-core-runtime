"use strict";var e=require("./MemoryManager.js"),t=require("./ObjectCollection.js"),n=require("../../util/TestUtil.js"),a=require("../../layout/Manager.js"),o=require("../Components.js"),r=require("../../event/Event.js");require("../../_rollupPluginBabelHelpers-aae655da.js"),require("../../event/ObjectBase.js"),require("../../event/StateBase.js"),require("../../util/ObjUtil.js"),require("react"),require("./Data.js"),require("./XMLParser.js"),require("../../json2xml-b8c1001f.js"),require("../Network/Network.js"),require("../Network/RequestObject.js"),describe("ObjectCollection protocol",(function(){n.createComponentClassTests(a.default.ComponentManager.getInstance(),o,null,t.config,["insert","read","update","upsert","delete"],["invalid","failure","inserting","inserted","reading","read","upserting","upserted","updating","updated","deleting","deleted","missing"],{},void 0,{render:!1}).forEach((function(e){test(e.title,e.test)}))})),describe("ObjectCollection register",(function(){n.createComponentRegisterTests(a.default.ComponentManager.getInstance(),o,"object",t.ObjectCollection,t.triggers,t.events,t.config,{}).forEach((function(e){test(e.title,e.test)}))})),describe("ObjectCollection memory test",(function(){beforeEach((function(){r.EventManager.getInstance().clearAll(),new t.ObjectCollection({id:"test_collection",type:"object",schema:{},data:{1:{id:"1",ok:1},"1d":{father:{daugther:8,son:5}}},manager:a.default.ComponentManager.getInstance()})})),test("Initiated data exists",(function(t){n.testEventSequence(a.default.ComponentManager.getInstance(),"test_collection","read","1","read",(function(n){expect(n.id).toEqual("1"),expect(n.ok).toEqual(1);var a=e.MemoryManager.getInstance().getMemory("test_collection").getData();expect(a.docs[1]).toEqual({id:"1",ok:1}),expect(a.docs["1d"]).toEqual({father:{daugther:8,son:5}}),t()}))})),test("Inserting data",(function(t){n.testEventSequence(a.default.ComponentManager.getInstance(),"test_collection","insert",{id:"2",ok:2},"inserted",(function(n){expect(n.id).toEqual("2"),expect(n.ok).toEqual(2);var a=e.MemoryManager.getInstance().getMemory("test_collection").getData();expect(a.docs[2]).toEqual({id:"2",ok:2}),t()}))})),test("Updating missing data results in missing",(function(e){n.testEventSequence(a.default.ComponentManager.getInstance(),"test_collection","update",{id:"MISSING-ID",OK:"Ok value 2"},"missing",(function(t){expect(t.id).toEqual("MISSING-ID"),e()}))})),test("Updating shallow object",(function(t){n.testEventSequence(a.default.ComponentManager.getInstance(),"test_collection","update",{id:"1",ok:"FINE"},"updated",(function(n){expect(n).toEqual({id:"1",ok:"FINE"});var a=e.MemoryManager.getInstance().getMemory("test_collection").getData();expect(a.docs[1]).toEqual({id:"1",ok:"FINE"}),t()}))})),test("Updating deep object",(function(t){n.testEventSequence(a.default.ComponentManager.getInstance(),"test_collection","update",{id:"1d",father:{daughter:9}},"updated",(function(n){var a=e.MemoryManager.getInstance().getMemory("test_collection").getData();expect(a.docs["1d"]).toEqual({father:{daugther:8,son:5,daughter:9},id:"1d"}),t()}))}))}));
//# sourceMappingURL=ObjectCollection.test.js.map
