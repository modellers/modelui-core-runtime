{"version":3,"file":"Manager.js","sources":["../../../src/layout/Manager.js"],"sourcesContent":["import Event from '../event/Event'\n\n/// //////////////////////////////////////////\n// State Manager\n/// //////////////////////////////////////////\nclass StateManager {\n  static _instance = null\n\n  _states = {}\n\n  /**\n   * @returns {StateManager}\n   */\n  static getInstance() {\n    if (StateManager._instance === null) {\n      StateManager._instance = new StateManager()\n    }\n\n    return this._instance\n  }\n\n  getManager(state_id) {\n    return this._states[state_id]\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  clearAll() { }\n\n  createState(props) {\n    return this.createManager(props.id, props)\n  }\n\n  createStates(props_array) {\n    for (const props of props_array) {\n      this.createManager(props.id, props)\n    }\n  }\n\n  createManager(state_id, props) {\n    const componentManagerInstance = ComponentManager.getInstance()\n    const _component = componentManagerInstance.getComponent(props.type)\n    if (_component) {\n      const config = _component.config\n      let state_inst = this.getManager(state_id)\n      if (state_inst) {\n        // TODO: warn that we are trying to create a manager that exists\n        return state_inst\n      } else {\n        if (config.state) {\n          // make sure to pass component manager\n          if (!props.manager) {\n            props.manager = componentManagerInstance\n          }\n          // create the class\n          state_inst = this.createStateByClass(config.state, props)\n          if (state_inst.registerComponent) {\n            state_inst.registerComponent({}, {}, config)\n          }\n          this._states[state_id] = state_inst\n        }\n        return state_inst\n      }\n    } else {\n      throw new Error('Component type does not exist: ' + props.type)\n    }\n  }\n\n  createStateByClass(StateClass, props) {\n    if (StateClass) {\n      return new StateClass(props)\n    }\n    return null\n  }\n\n  // TODO: create state statemanagers from layout tree\n  createLayoutState(layout_tree) {\n    walkLayout(layout_tree, (props) => {\n      if (\n        props.type &&\n        props.id &&\n        props.config &&\n        (props.data || props.content || props.actions)\n      ) {\n        this.createState(props)\n      }\n    })\n  }\n}\n\nexport const walkLayout = (layt, callback) => {\n  const _walk = (_layt) => {\n    for (const d in _layt) {\n      if (callback && _layt[d]) {\n        callback(_layt[d])\n      }\n      if (_layt[d].data) {\n        _walk(_layt[d].data)\n      }\n      if (_layt[d].content) {\n        _walk([_layt[d].content])\n      }\n      if (_layt[d].actions) {\n        _walk([_layt[d].actions])\n      }\n    }\n  }\n  _walk(layt)\n}\n\n/// //////////////////////////////////////////\n// Component Manager\n/// //////////////////////////////////////////\n\nclass ComponentManager {\n  static _instance = null\n\n  _components = {}\n\n  /**\n   * @returns {ComponentManager}\n   */\n  static getInstance() {\n    if (ComponentManager._instance === null) {\n      ComponentManager._instance = new ComponentManager()\n      ComponentManager._instance._event_manager =\n        Event.EventManager.getInstance()\n      ComponentManager._instance._state_factory = StateManager.getInstance()\n    }\n\n    return this._instance\n  }\n\n  getEventManager() {\n    return this._event_manager\n  }\n\n  getStateFactory() {\n    return this._state_factory\n  }\n\n  getStateManager() {\n    return this._state_factory\n  }\n\n  clearAll() {\n    this._components = {}\n  }\n\n  registerComponent(component) {\n    /**\n     * Adds component to layout manager of any type.\n     * Specific types in TYPES are specifically used when automatically generating the layout using AI.\n     */\n\n    // attach managers and factory\n    component.manager = this\n\n    if (typeof component.component === 'function') {\n      this._components[component.type] = component\n    } else {\n      console.error(\n        'Could not register ' + component.type + ' since it was not a function'\n      )\n    }\n  }\n\n  getComponentTypes() {\n    return Object.keys(this._components)\n  }\n\n  getComponents() {\n    return this._components\n  }\n\n  getComponent(component_type) {\n    return this._components[component_type]\n  }\n\n  getComponentInstance(component_type, parameters) {\n    // TODO: validate parameter inputs\n    // paramters\n    parameters.manager = this\n    // create component\n    const c = this._components[component_type]\n    if (c) {\n      // if React component is of type class\n      if (c.is_withclass) {\n        return c.component\n      } else {\n        // if React component is of type function\n        // eslint-disable-next-line new-cap\n        return new c.component(parameters)\n      }\n    } else {\n      console.warn(\n        'Component instance not registered of type: ' + component_type\n      )\n    }\n  }\n\n  collectComponentInventory() {\n    const store = {}\n    for (const [key, comp] of Object.entries(this._components)) {\n      const cfg = comp.config\n      if (cfg && key && cfg.type) {\n        let parents = ''\n        if (cfg.relation) {\n          parents = cfg.relation.within\n        }\n        store[cfg.type] = {\n          id: cfg.type,\n          title: cfg.name,\n          type: cfg.type,\n          events: comp.events,\n          actions: comp.triggers,\n          category: 'TBD',\n          parent: parents,\n          schema: cfg.options\n        }\n        // also add the children\n        if (cfg.contains) {\n          for (const [key_itm, comp] of Object.entries(cfg.contains)) {\n            const itm = cfg.contains[key_itm]\n            store[key_itm] = {\n              id: key_itm,\n              title: itm.title || itm.id,\n              category: 'TBD',\n              type: key_itm,\n              parent: cfg.type,\n              schema: comp\n            }\n          }\n        }\n      }\n    }\n    return store\n  }\n}\n\nexport default { ComponentManager, StateManager }\n"],"names":["StateManager","_classCallCheck","_defineProperty","this","_createClass","key","value","state_id","_states","props","createManager","id","props_array","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","componentManagerInstance","ComponentManager","getInstance","_component","getComponent","type","config","state_inst","getManager","state","manager","createStateByClass","registerComponent","Error","StateClass","layout_tree","_this","walkLayout","data","content","actions","createState","_instance","layt","callback","_walk","_layt","d","_event_manager","_state_factory","_components","component","console","error","Object","keys","component_type","parameters","c","is_withclass","warn","store","_i","_Object$entries","entries","length","_Object$entries$_i","_slicedToArray","comp","cfg","parents","relation","within","title","name","events","triggers","category","parent","schema","options","contains","_i2","_Object$entries2","_Object$entries2$_i","key_itm","itm","Event","EventManager","Manager"],"mappings":"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"}