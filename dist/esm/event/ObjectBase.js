import{_ as e,a,b as i,c as t,d as s,e as n,h as r}from"../_rollupPluginBabelHelpers-55d249d8.js";import{StateLess as d}from"./StateBase.js";import c from"./Event.js";import{mergeDeep as o}from"../util/ObjUtil.js";import{MemoryManager as m}from"../components/Data/MemoryManager.js";var u={insert:{alias:[],info:{name:"Insert",description:"Insert object"},schema:{}},read:{alias:[],info:{name:"Read",description:"Read object"},schema:{}},update:{alias:[],info:{name:"Update",description:"Update object"},schema:{}},upsert:{alias:[],info:{name:"Upsert",description:"Upsert object"},schema:{}},delete:{alias:[],info:{name:"Delete",description:"Delete object"},schema:{}}},l={invalid:{alias:[],info:{name:"invalid",description:"Insert was invalid"},schema:{}},failure:{alias:[],info:{name:"failure",description:"Insert was failed"},schema:{}},inserting:{alias:[],info:{name:"inserting",description:"Insterting item creates or replaces"},schema:{}},inserted:{alias:[],info:{name:"inserted",description:"Inserted item creates or replaces"},schema:{}},reading:{alias:[],info:{name:"Reading",description:"Reading identifer"},schema:{}},read:{alias:[],info:{name:"Read",description:"Read identifer"},schema:{}},upserting:{alias:[],info:{name:"upserting",description:"TBD"},schema:{}},upserted:{alias:[],info:{name:"upserted",description:"TBD"},schema:{}},updating:{alias:[],info:{name:"updating",description:"TBD"},schema:{}},updated:{alias:[],info:{name:"updated",description:"TBD"},schema:{}},deleting:{alias:[],info:{name:"deleting",description:"TBD"},schema:{}},deleted:{alias:[],info:{name:"deleted",description:"TBD"},schema:{}},missing:{alias:[],info:{name:"Missing",description:"Missing read identifer"},schema:{}}},f=function(u){e(v,d);var f=a(v);function v(e){var a;return t(this,v),a=f.call(this,e),s(n(a),"getData",(function(){return a.getState().data})),s(n(a),"deepMerge",(function(e,a){return o(e,a)})),s(n(a),"raiseSuccessEvent",(function(e,i,t){a.triggerEvent(e,i,t)})),s(n(a),"raiseFailureEvent",(function(e,i,t){a.triggerEvent(e,i,t)})),s(n(a),"isValidDocumentSchema",(function(e,a){return!0})),s(n(a),"isValidDocumentId",(function(e){return null!=e})),s(n(a),"getValidDocumentId",(function(e){if("string"==typeof e)return e;var i=e.id||e.identifier;return a.isValidDocumentId(i)?i:null})),s(n(a),"registerComponent",(function(e,i,t){e=e||{},i=i||{};var s={insert:{schema:{},handler:function(e){var i=n(a);function t(e,a,t){var s=i.isValidDocumentSchema(e,t);s?(i.raiseSuccessEvent("inserting",e),a[i.getValidDocumentId(e)]=e,i.raiseSuccessEvent("inserted",e)):i.raiseFailureEvent("invalid",e,{message:"Document structure is invalid against schema",code:501,data:{document:e,schema:t,reason:s}})}Array.isArray(e)?e.forEach((function(e){t(e,i.state.data.docs,i.state.data.schema)})):t(e,i.state.data.docs)}},read:{schema:{},handler:function(e){var i=n(a);function t(e,a){if(e=i.getValidDocumentId(e)){i.raiseSuccessEvent("reading",{id:e});var t=a[e];if(t)try{i.raiseSuccessEvent("read",t)}catch(a){i.raiseFailureEvent("failure",{id:e},a)}else i.raiseFailureEvent("missing",{id:e},{message:"Document identifier is invalid",code:401,data:{id:e}})}else i.raiseFailureEvent("invalid",{id:e},{message:"Document identifier is invalid",code:301,data:{id:e}})}Array.isArray(e)?e.forEach((function(e){t(e,a.state.data.docs,a.state.data.schema)})):t(e,a.state.data.docs)}},update:{schema:{},handler:function(e){var i=n(a);function t(e,a,t){if(i.isValidDocumentSchema(e,t)){var s=i.getValidDocumentId(e);if(i.raiseSuccessEvent("updating",e),s){var n=a[s];if(n)try{a[s]=o(n||{},e),i.raiseSuccessEvent("updated",a[s])}catch(a){i.raiseFailureEvent("error",e)}else i.raiseFailureEvent("missing",{id:s,data:a},{})}else i.raiseFailureEvent("invalid",e,{message:"Document identifier is invalid",code:301,data:s})}}Array.isArray(e)?e.forEach((function(e){t(e,a.state.data.docs,a.state.data.schema)})):t(e,a.state.data.docs,a.state.data.schema)}},upsert:{schema:{},handler:function(e){var i=n(a);function t(e,a,t){var s=i.isValidDocumentSchema(e,t);if(s){i.raiseSuccessEvent("upserting",e);var n=i.getValidDocumentId(e);if(n){var r=a[n];try{a[n]=i.deepMerge(r||{},e),i.raiseSuccessEvent("upserted",a[n])}catch(a){i.raiseFailureEvent("failure",e,a)}}}else i.raiseFailureEvent("invalid",e,{message:"Document structure is invalid against schema",code:501,data:{document:e,schema:t,reason:s}})}Array.isArray(e)?e.forEach((function(e){t(e,a.state.data.docs,a.state.data.schema)})):t(e,a.state.data.docs,a.state.data.schema)}},delete:{schema:{},handler:function(e){var i=n(a);function t(e,a){(e=i.getValidDocumentId(e))?(i.raiseSuccessEvent("deleting",{id:e}),a[e]?(delete a[e],i.raiseSuccessEvent("deleted",{id:e})):i.raiseFailureEvent("missing",{id:e})):i.raiseFailureEvent("invalid",{id:e},{message:"Document identifier is invalid",code:301,data:{id:e}})}Array.isArray(e)?e.forEach((function(e){t(e,a.state.data.docs)})):t(e,a.state.data.docs)}}};return a.ddEvent=c.EventManager.getInstance().register(a.props.id,r(r({},s),e),r(r({},l),i),t),a.ddEvent})),a.props=e,a.state={data:{docs:e.data,schema:e.data.schema||e.schema},schema:e.schema},m.getInstance().registerMemory(e.id,n(a)),a}return i(v)}();export{f as StateObject,l as events,u as triggers};
//# sourceMappingURL=ObjectBase.js.map
