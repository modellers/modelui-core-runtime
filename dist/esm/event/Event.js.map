{"version":3,"file":"Event.js","sources":["../../../src/event/Event.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\n/***\nhttps://stackoverflow.com/questions/44719103/singleton-object-in-react-native\n\nimport EventManager from './EventManager';\n\n// When storing data.\nlet commonData = EventManager.getInstance();\ncommonData.setUserID(\"User1\");\n\n// When retrieving stored data.\nlet commonData = EventManager.getInstance();\nlet userId = commonData.getUserID();\nconsole.log(userId);\n\n*/\nclass EventManager {\n  static _instance = null\n\n  _events = {}\n  _watching = {}\n  _actions = {}\n  _components = {}\n  _component_instance_type = {}\n\n  /**\n   * @returns {EventManager}\n   */\n  static getInstance() {\n    if (EventManager._instance === null) {\n      EventManager._instance = new EventManager()\n    }\n\n    return this._instance\n  }\n\n  /// //////////////////////////////////////////////\n  /// Utility functions\n  /// //////////////////////////////////////////////\n\n  getType(oObj) {\n    let res = false\n    if (typeof oObj === 'object') {\n      res =\n        oObj === null\n          ? 'null'\n          : // Check if it is an alien object, for example created as {world:'hello'}\n          typeof oObj.constructor !== 'function'\n            ? 'object'\n            : // else return object name (string)\n            oObj.constructor.name\n    } else {\n      // Test simple types (not constructed types)\n      res =\n        typeof oObj === 'boolean'\n          ? 'boolean'\n          : typeof oObj === 'number'\n            ? 'number'\n            : typeof oObj === 'string'\n              ? 'string'\n              : typeof oObj === 'function'\n                ? 'function'\n                : false\n    }\n    return (res + '').toLowerCase()\n  }\n\n  clearAll() {\n    this._events = {}\n    this._watching = {}\n    this._actions = {}\n    this._component_instance_type = {}\n  }\n\n  warnRegistration(input_type, component_id, event_name, msg) {\n    const newLocal =\n      'Update registration for ' +\n      input_type +\n      ' ' +\n      component_id +\n      '.' +\n      event_name +\n      ' : ' +\n      msg\n    console.warn(newLocal)\n    // TODO: should notify the UI\n  }\n\n  warnInfoRegistration(component_id, msg) {\n    console.warn('Update registration for ' + component_id + ': ' + msg)\n    // TODO: should notify the UI\n  }\n\n  valid(obj, attr, type, default_value, component_id, key, input_type) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(attr)) {\n      obj[attr] = default_value\n      this.warnRegistration(\n        input_type,\n        component_id,\n        key,\n        'Attribute ' + attr + ' missing. Using default value.'\n      )\n    }\n    if (this.getType(obj[attr]) !== type) {\n      this.warnRegistration(\n        input_type,\n        component_id,\n        key,\n        `Attribute ${attr} should be of type ${type} but is ${this.getType(\n          obj[attr]\n        )} using default values.`\n      )\n    }\n  }\n\n  validInputsForUI(obj, input_type, component_id, key) {\n    // check if schema is specified. Used by UI and validating inputs during runtime\n    this.valid(\n      obj,\n      'schema',\n      'object',\n      {\n        type: 'object',\n        title: component_id + '-' + key,\n        description: 'Auto generated'\n      },\n      component_id,\n      key,\n      input_type\n    )\n  }\n\n  capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  /// //////////////////////////////////////////////\n  /// Component self registering (is called in component)\n  /// //////////////////////////////////////////////\n\n  register(component_id, actions, events, component_info) {\n    // TODO: validate input action\n    if (!component_info) {\n      console.warn('Component info is missing for ' + component_id) // throw \"Component info is missing\";\n    } else {\n      this._components[component_info.type] = component_info\n      this._components[component_info.type].actions = actions\n      this._components[component_info.type].events = events\n      this._component_instance_type[component_id] = component_info.type\n    }\n\n    this._actions[component_id] = {}\n    this._events[component_id] = events || {}\n    // lets save our actions\n    Object.keys(actions).forEach((key) => {\n      // validate the action registration\n      let action = actions[key]\n      // if we only specify function, lets refactor\n      if (typeof action === 'function') {\n        action = { handler: action }\n        this.warnRegistration(\n          component_id,\n          key,\n          'Function handler should be defined as handler in an object. Auto refactoring done.'\n        )\n      }\n      this.validInputsForUI(action, 'action', component_id, key)\n      this._actions[component_id][key] = action\n    })\n\n    const event_map = {} // used to return the event mapping id\n\n    // lets assign ids to the events\n    Object.keys(this._events[component_id]).forEach((key) => {\n      const key_id = key // TODO: should be random\n      if (!this._events[component_id][key].id) {\n        // if undefined, null or 0\n        this._events[component_id][key].id = key_id\n        event_map[key] = { id: key_id } // REMOVE ME when refactoring this\n      } else {\n        event_map[key] = { id: this._events[component_id][key].id } // TODO: EVENT HAS CALLABLE HANDLER\n      }\n      this.validInputsForUI(\n        this._events[component_id][key],\n        'event',\n        component_id,\n        key\n      )\n    })\n\n    return event_map\n  }\n\n  /// //////////////////////////////////////////////\n  /// modelui core functions\n  /// //////////////////////////////////////////////\n\n  addToWatchList(cid, evt, trigger_id, trigger_action, transform) {\n    if (!this._watching[cid]) {\n      this._watching[cid] = {}\n    }\n    if (this._watching[cid][evt] === undefined) {\n      this._watching[cid][evt] = [] // add a trigger array for component\n    }\n\n    // add to trigger array an action to perform\n    this._watching[cid][evt].push({\n      tid: trigger_id, // trigger id\n      act: trigger_action, // trigger event\n      transf: transform // transformation function (TODO: if not set find one!!!)\n    })\n  }\n\n  watch(W) {\n    // TODO: validate W against registered\n    if (Array.isArray(W) === false) {\n      W = [W]\n    }\n\n    for (let i = 0; i < W.length; i++) {\n      const w = W[i]\n      const cid = w.component.id\n      const evt = w.component.event\n      if (w.component.filter) {\n        // if this is a filtered watch\n        if (!w.component.regex) {\n          // only compile expression if missing\n          w.component.regex = new RegExp(w.component.filter)\n        }\n        Object.entries(this._actions).forEach(([cid_key, value]) => {\n          if (w.component.regex.exec(cid_key)) {\n            this.addToWatchList(\n              cid_key,\n              evt,\n              w.trigger.id,\n              w.trigger.action,\n              w.transform\n            )\n          }\n        })\n      } else {\n        // lets add the id to watch list instead\n        if (cid) {\n          this.addToWatchList(\n            cid,\n            evt,\n            w.trigger.id,\n            w.trigger.action,\n            w.transform\n          )\n        }\n      }\n    }\n  }\n\n  addEvent(cid, event_name, data, evt) {\n    // are we watching this component\n    if (this._watching[cid]) {\n      // are we watching this component event\n      const actions = this._watching[cid][event_name] || []\n      for (const a in actions) {\n        const act = actions[a]\n        this.addAction(act.tid, act.act, data, act.transf, evt)\n      }\n    }\n  }\n\n  addAction(component_id, action_name, data, transform, evt) {\n    if (this._actions[component_id]) {\n      if (this._actions[component_id][action_name]) {\n        let transformed_data = data\n        if (transform) {\n          try {\n            transformed_data = transform(data)\n          } catch (e) {\n            console.error('Transform failed', e)\n          }\n        }\n        if (transformed_data) {\n          // only apply action if data is available\n          this._actions[component_id][action_name].handler(\n            transformed_data,\n            evt\n          )\n        }\n      }\n    }\n  }\n\n  /// //////////////////////////////////////////////\n  /// Debugging\n  /// //////////////////////////////////////////////\n\n  getCopyOfEvents() {\n    return Object.assign({}, this._events)\n  }\n\n  getCopyOfWatchers() {\n    return Object.assign({}, this._watching)\n  }\n\n  getCopyOfActions() {\n    return Object.assign({}, this._actions)\n  }\n\n  /// //////////////////////////////////////////////\n  /// Modeller UI related functions\n  /// //////////////////////////////////////////////\n\n  collectComponentInventory() {\n    const store = {}\n\n    for (const [key, comp] of Object.entries(this._components)) {\n      let parents = ''\n      if (comp.relation) {\n        parents = comp.relation.within\n      }\n      store[key] = {\n        id: comp.type,\n        title: comp.name,\n        type: comp.type,\n        parent: parents\n      }\n    }\n    return store\n  }\n\n  getComponentSchema(type) {\n    return this._components[type].options\n  }\n\n  getComponentByType(type) {\n    return this._components[type]\n  }\n\n  getComponentsRegistered() {\n    return Object.keys(this._component_instance_type)\n  }\n\n  getComponentType(component_id) {\n    return this._component_instance_type[component_id]\n  }\n}\n\nconst getTransformFunction = (evt) => {\n  // the event has .transform as attribute\n  if (typeof (evt.transform || evt.code) !== 'string') {\n    return 'Event code attribute is missing'\n  }\n  try {\n    // TODO: support more params\n    // eslint-disable-next-line no-new-func\n    const fn = Function('data', evt.transform || evt.code)\n    return fn\n  } catch (e) {\n    return e + ''\n  }\n}\n\nexport default { EventManager, getTransformFunction }\n"],"names":["EventManager","_classCallCheck","_defineProperty","_createClass","key","value","getType","oObj","res","_typeof","constructor","name","toLowerCase","clearAll","_events","_watching","_actions","_component_instance_type","warnRegistration","input_type","component_id","event_name","msg","newLocal","console","warn","warnInfoRegistration","valid","obj","attr","type","default_value","hasOwnProperty","concat","validInputsForUI","title","description","capitalize","str","charAt","toUpperCase","slice","register","actions","events","component_info","_this","_components","Object","keys","forEach","action","handler","event_map","key_id","id","addToWatchList","cid","evt","trigger_id","trigger_action","transform","undefined","push","tid","act","transf","watch","W","_this2","Array","isArray","_loop","w","i","component","event","filter","regex","RegExp","entries","_ref","_ref2","_slicedToArray","cid_key","exec","trigger","length","addEvent","data","a","addAction","action_name","transformed_data","e","error","getCopyOfEvents","assign","getCopyOfWatchers","getCopyOfActions","collectComponentInventory","store","_i","_Object$entries","_Object$entries$_i","comp","parents","relation","within","parent","getComponentSchema","options","getComponentByType","getComponentsRegistered","getComponentType","getInstance","_instance","getTransformFunction","code","fn","Function"],"mappings":"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"}