{"version":3,"file":"InputBase.js","sources":["../../../src/event/InputBase.js"],"sourcesContent":["// common tools\nimport StateBase from './StateBase'\nimport StateBaseComponent from './StateBaseComponent'\n// event handler\n// import Event from './Event'\n\nconst events = {\n  changed: {\n    alias: [],\n    info: {\n      name: 'Changed',\n      description: 'Input value changed'\n    },\n    schema: {}\n  },\n  enabled: {\n    alias: [],\n    info: {\n      name: 'Enabled',\n      description: 'Enabled input'\n    },\n    schema: {}\n  },\n  disabled: {\n    alias: [],\n    info: {\n      name: 'Disabled',\n      description: 'Disabled input'\n    },\n    schema: {}\n  },\n  submitted: {\n    alias: [],\n    info: {\n      name: 'Submitted',\n      description: 'Submitted value'\n    },\n    schema: {}\n  },\n  cleared: {\n    alias: [],\n    info: {\n      name: 'Cleared',\n      description: 'Cleared value'\n    },\n    schema: {}\n  },\n  populated: {\n    alias: [],\n    info: {\n      name: 'Populated',\n      description: 'Populated value'\n    },\n    schema: {}\n  },\n  replaced: {\n    alias: [],\n    info: {\n      name: 'Replaced',\n      description: 'Replaced value'\n    },\n    schema: {}\n  },\n  invalidated: {\n    alias: [],\n    info: { name: 'In-validated', description: 'Unselecting item' },\n    schema: {}\n  },\n  validated: {\n    alias: [],\n    info: { name: 'De-Selected', description: 'Unselecting item' },\n    schema: {}\n  }\n}\n\nconst triggers = {\n  submit: {\n    info: { name: 'Submit', description: 'Submits the form data' },\n    schema: {},\n    alias: []\n  },\n  enable: {\n    info: {\n      name: 'Enables',\n      description: 'Enables the form so that we can change form inputs'\n    },\n    schema: {},\n    alias: []\n  },\n  disable: {\n    info: {\n      name: 'Disable',\n      description: 'Disables the form so that we can not change input value'\n    },\n    schema: {},\n    alias: []\n  },\n  // change: { info: { name: 'Change', description: 'Changes' }, schema: {}, alias: [] },\n  clear: {\n    info: {\n      name: 'Clear',\n      description: 'Removes all input values clearing the form'\n    },\n    schema: {},\n    alias: []\n  },\n  populate: {\n    info: {\n      name: 'Populate',\n      description: 'Fills the form with specified data'\n    },\n    schema: {},\n    alias: []\n  },\n  replace: {\n    info: {\n      name: 'Replace',\n      description: 'Replaces the form with specified data'\n    },\n    schema: {},\n    alias: []\n  }\n}\n\nclass StateInput extends StateBase.StateInstance {\n  constructor(props) {\n    super(props)\n    this.props = props\n    // apply initial values\n    this.state = {\n      data: {\n        id: props.data.id || null,\n        value: props.data.value,\n        schema: props.data.schema || props.schema\n      },\n      enabled: (props.config || {}).enabled || true,\n      schema: props.schema\n    }\n\n    if (!this.props.manager) {\n      throw new Error('Manager was not passed through StateInput props')\n    }\n\n    this.eventManager = this.props.manager.getEventManager()\n  }\n\n  registerComponent = (actionHandlers, eventHandlers, component_info) => {\n    const self = this\n    actionHandlers = actionHandlers || {}\n    eventHandlers = eventHandlers || {}\n    // add our known handlers\n    // register componenet overiding or adding new event handlers\n    const dataActionHandlers = {\n      submit: {\n        schema: {},\n        handler: (obj) => {\n          // Event.EventManager.getInstance().addEvent(\n          this.eventManager.addEvent(this.props.id, 'submitting', obj, null)\n          this.getActionState('submit', function (change) {\n            const update = self.alterState(change)\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(\n              self.props.id,\n              'submitted',\n              update.data,\n              null\n            )\n          })\n        }\n      },\n      enable: {\n        schema: {},\n        handler: (obj) => {\n          const change = { disabled: false }\n          self.alterState(change)\n          if (this.updateView('enable', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'enabled', change, null)\n          }\n        }\n      },\n      disable: {\n        schema: {},\n        handler: (obj) => {\n          const change = { disabled: true }\n          self.alterState(change)\n          if (this.updateView('disable', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'disabled', change, null)\n          }\n        }\n      },\n      clear: {\n        schema: {},\n        handler: (obj) => {\n          const change = { data: { value: '' } } // getSchemaDefaults(this.state.data.schema || this.state.schema);\n          const update = self.alterState(change)\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'clearing', change, {})\n          if (self.updateView('clear', obj, obj, update)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(\n              self.props.id,\n              'cleared',\n              update.data,\n              null\n            )\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(\n            self.props.id,\n            'changed',\n            update.data,\n            null\n          )\n        }\n      },\n      populate: {\n        schema: {},\n        handler: (obj) => {\n          const change = { data: { value: obj.value, id: obj.id } }\n          self.alterState(change)\n          if (self.updateView('populate', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'populated', obj, null)\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'changed', obj, null)\n        }\n      },\n      replace: {\n        schema: {},\n        handler: (obj) => {\n          const replaced = {\n            ...self.state,\n            data: {\n              ...obj,\n              id: obj.id,\n              value: obj.value || this.state.data.value,\n              schema: obj.schema || this.state.data.schema\n            }\n          }\n          self.setState(replaced)\n          if (self.updateView('replace', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'replaced', obj, null)\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'changed', obj, null)\n        }\n      }\n    }\n\n    // register componenet overiding or adding new event handlers\n    // this.ddEvent = Event.EventManager.getInstance().register(\n    self.ddEvent = self.eventManager.register(\n      self.props.id,\n      { ...dataActionHandlers, ...actionHandlers },\n      { ...events, ...eventHandlers },\n      component_info\n    )\n    return self.ddEvent\n  }\n}\n\nclass InputBase extends StateBaseComponent.StateBaseComponent {\n  /**\n   * Used to manage internal state of avatars\n   */\n  constructor(props) {\n    if (!props.config.options) {\n      props.config.options = {}\n    }\n    super(props)\n    this.props = props\n  }\n\n  updateView = (action, arr, updated, data) => {\n    // extend by parent\n    return true\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default { events, triggers, StateInput, InputBase }\n"],"names":["events","changed","alias","info","name","description","schema","enabled","disabled","submitted","cleared","populated","replaced","invalidated","validated","triggers","submit","enable","disable","clear","populate","replace","StateInput","_StateBase$StateInsta","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","actionHandlers","eventHandlers","component_info","self","dataActionHandlers","handler","obj","eventManager","addEvent","id","getActionState","change","update","alterState","data","updateView","state","value","_objectSpread","setState","ddEvent","register","config","manager","Error","getEventManager","_createClass","StateBase","StateInstance","InputBase","_StateBaseComponent$S","_super2","_this2","options","action","arr","updated","key","render","StateBaseComponent"],"mappings":"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"}