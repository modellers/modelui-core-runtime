{"version":3,"file":"Manager.js","sources":["../../../src/layout/Manager.js"],"sourcesContent":["import Event from '../event/Event'\n\n/// //////////////////////////////////////////\n// State Manager\n/// //////////////////////////////////////////\nclass StateManager {\n  static _instance = null\n\n  _states = {}\n\n  /**\n   * @returns {StateManager}\n   */\n  static getInstance() {\n    if (StateManager._instance === null) {\n      StateManager._instance = new StateManager()\n    }\n\n    return this._instance\n  }\n\n  getManager(state_id) {\n    return this._states[state_id]\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  clearAll() { }\n\n  createState(props) {\n    return this.createManager(props.id, props)\n  }\n\n  createStates(props_array) {\n    for (const props of props_array) {\n      this.createManager(props.id, props)\n    }\n  }\n\n  createManager(state_id, props) {\n    const componentManagerInstance = ComponentManager.getInstance()\n    const _component = componentManagerInstance.getComponent(props.type)\n    if (_component) {\n      const config = _component.config\n      let state_inst = this.getManager(state_id)\n      if (state_inst) {\n        // TODO: warn that we are trying to create a manager that exists\n        return state_inst\n      } else {\n        if (config.state) {\n          // make sure to pass component manager\n          if (!props.manager) {\n            props.manager = componentManagerInstance\n          }\n          // create the class\n          state_inst = this.createStateByClass(config.state, props)\n          if (state_inst.registerComponent) {\n            state_inst.registerComponent({}, {}, config)\n          }\n          this._states[state_id] = state_inst\n        }\n        return state_inst\n      }\n    } else {\n      throw new Error('Component type does not exist: ' + props.type)\n    }\n  }\n\n  createStateByClass(StateClass, props) {\n    if (StateClass) {\n      return new StateClass(props)\n    }\n    return null\n  }\n\n  // TODO: create state statemanagers from layout tree\n  createLayoutState(layout_tree) {\n    walkLayout(layout_tree, (props) => {\n      if (\n        props.type &&\n        props.id &&\n        props.config &&\n        (props.data || props.content || props.actions)\n      ) {\n        this.createState(props)\n      }\n    })\n  }\n}\n\nexport const walkLayout = (layt, callback) => {\n  const _walk = (_layt) => {\n    for (const d in _layt) {\n      if (callback && _layt[d]) {\n        callback(_layt[d])\n      }\n      if (_layt[d].data) {\n        _walk(_layt[d].data)\n      }\n      if (_layt[d].content) {\n        _walk([_layt[d].content])\n      }\n      if (_layt[d].actions) {\n        _walk([_layt[d].actions])\n      }\n    }\n  }\n  _walk(layt)\n}\n\n/// //////////////////////////////////////////\n// Component Manager\n/// //////////////////////////////////////////\n\nclass ComponentManager {\n  static _instance = null\n\n  _components = {}\n\n  /**\n   * @returns {ComponentManager}\n   */\n  static getInstance() {\n    if (ComponentManager._instance === null) {\n      ComponentManager._instance = new ComponentManager()\n      ComponentManager._instance._event_manager =\n        Event.EventManager.getInstance()\n      ComponentManager._instance._state_factory = StateManager.getInstance()\n    }\n\n    return this._instance\n  }\n\n  getEventManager() {\n    return this._event_manager\n  }\n\n  getStateFactory() {\n    return this._state_factory\n  }\n\n  getStateManager() {\n    return this._state_factory\n  }\n\n  clearAll() {\n    this._components = {}\n  }\n\n  registerComponent(component) {\n    /**\n     * Adds component to layout manager of any type.\n     * Specific types in TYPES are specifically used when automatically generating the layout using AI.\n     */\n\n    // attach managers and factory\n    component.manager = this\n\n    if (typeof component.component === 'function') {\n      this._components[component.type] = component\n    } else {\n      console.error(\n        'Could not register ' + component.type + ' since it was not a function'\n      )\n    }\n  }\n\n  getComponentTypes() {\n    return Object.keys(this._components)\n  }\n\n  getComponents() {\n    return this._components\n  }\n\n  getComponent(component_type) {\n    return this._components[component_type]\n  }\n\n  getComponentInstance(component_type, parameters) {\n    // TODO: validate parameter inputs\n    // paramters\n    parameters.manager = this\n    // create component\n    const c = this._components[component_type]\n    if (c) {\n      // if React component is of type class\n      if (c.is_withclass) {\n        return c.component\n      } else {\n        // if React component is of type function\n        // eslint-disable-next-line new-cap\n        return new c.component(parameters)\n      }\n    } else {\n      console.warn(\n        'Component instance not registered of type: ' + component_type\n      )\n    }\n  }\n\n  collectComponentInventory() {\n    const store = {}\n    for (const [key, comp] of Object.entries(this._components)) {\n      const cfg = comp.config\n      if (cfg && key && cfg.type) {\n        let parents = ''\n        if (cfg.relation) {\n          parents = cfg.relation.within\n        }\n        store[cfg.type] = {\n          id: cfg.type,\n          title: cfg.name,\n          type: cfg.type,\n          events: comp.events,\n          actions: comp.triggers,\n          category: 'TBD',\n          parent: parents,\n          schema: cfg.options\n        }\n        // also add the children\n        if (cfg.contains) {\n          for (const [key_itm, comp] of Object.entries(cfg.contains)) {\n            const itm = cfg.contains[key_itm]\n            store[key_itm] = {\n              id: key_itm,\n              title: itm.title || itm.id,\n              category: 'TBD',\n              type: key_itm,\n              parent: cfg.type,\n              schema: comp\n            }\n          }\n        }\n      }\n    }\n    return store\n  }\n}\n\nexport default { ComponentManager, StateManager }\n"],"names":["StateManager","_classCallCheck","_defineProperty","_createClass","key","value","getManager","state_id","_states","clearAll","createState","props","createManager","id","createStates","props_array","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","componentManagerInstance","ComponentManager","getInstance","_component","getComponent","type","config","state_inst","state","manager","createStateByClass","registerComponent","Error","StateClass","createLayoutState","layout_tree","_this","walkLayout","data","content","actions","_instance","layt","callback","_walk","_layt","d","getEventManager","_event_manager","getStateFactory","_state_factory","getStateManager","_components","component","console","error","getComponentTypes","Object","keys","getComponents","component_type","getComponentInstance","parameters","c","is_withclass","warn","collectComponentInventory","store","_i","_Object$entries","entries","length","_Object$entries$_i","_slicedToArray","comp","cfg","parents","relation","within","title","name","events","triggers","category","parent","schema","options","contains","_i2","_Object$entries2","_Object$entries2$_i","key_itm","itm","Event","EventManager"],"mappings":"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"}