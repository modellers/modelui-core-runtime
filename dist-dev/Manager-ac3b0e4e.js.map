{"version":3,"file":"Manager-ac3b0e4e.js","sources":["../src/event/StateManager.js","../src/layout/Manager.js"],"sourcesContent":["import Manager from '../layout/Manager'\n\nclass StateManager {\n  static _instance = null\n\n  _states = {}\n\n  /**\n   * @returns {StateManager}\n   */\n  static getInstance() {\n    if (StateManager._instance === null) {\n      StateManager._instance = new StateManager()\n    }\n\n    return this._instance\n  }\n\n  getManager(state_id) {\n    return this._states[state_id]\n  }\n\n  clearAll() {}\n\n  createState(props) {\n    return this.createManager(props.id, props)\n  }\n\n  createStates(props_array) {\n    for (const props of props_array) {\n      this.createManager(props.id, props)\n    }\n  }\n\n  createManager(state_id, props) {\n    const componentManagerInstance = Manager.ComponentManager.getInstance()\n    const _component = componentManagerInstance.getComponent(props.type)\n    if (_component) {\n      const config = _component.config\n      let state_inst = this.getManager(state_id)\n      if (state_inst) {\n        // TODO: warn that we are trying to create a manager that exists\n        return state_inst\n      } else {\n        if (config.state) {\n          // make sure to pass component manager\n          if (!props.manager) {\n            props.manager = componentManagerInstance\n          }\n          // create the class\n          state_inst = this.createStateByClass(config.state, props)\n          if (state_inst.registerComponent) {\n            state_inst.registerComponent({}, {}, config)\n          }\n          this._states[state_id] = state_inst\n        }\n        return state_inst\n      }\n    } else {\n      throw new Error('Component type does not exist: ' + props.type)\n    }\n  }\n\n  createStateByClass(StateClass, props) {\n    if (StateClass) {\n      return new StateClass(props)\n    }\n    return null\n  }\n\n  // TODO: create state statemanagers from layout tree\n  createLayoutState(layout_tree) {\n    walkLayout(layout_tree, (props) => {\n      if (\n        props.type &&\n        props.id &&\n        props.config &&\n        (props.data || props.content || props.actions)\n      ) {\n        this.createState(props)\n      }\n    })\n  }\n}\n\nexport const walkLayout = (layt, callback) => {\n  const _walk = (_layt) => {\n    for (const d in _layt) {\n      if (callback && _layt[d]) {\n        callback(_layt[d])\n      }\n      if (_layt[d].data) {\n        _walk(_layt[d].data)\n      }\n      if (_layt[d].content) {\n        _walk([_layt[d].content])\n      }\n      if (_layt[d].actions) {\n        _walk([_layt[d].actions])\n      }\n    }\n  }\n  _walk(layt)\n}\n\nexport default { StateManager, walkLayout }\n","import Event from '../event/Event'\nimport StateManager from '../event/StateManager'\n\nclass ComponentManager {\n  static _instance = null\n\n  _components = {}\n\n  /**\n   * @returns {ComponentManager}\n   */\n  static getInstance() {\n    if (ComponentManager._instance === null) {\n      ComponentManager._instance = new ComponentManager()\n      ComponentManager._instance._event_manager =\n        Event.EventManager.getInstance()\n      ComponentManager._instance._state_factory =\n        StateManager.StateManager.getInstance()\n    }\n\n    return this._instance\n  }\n\n  getEventManager() {\n    return this._event_manager\n  }\n\n  getStateFactory() {\n    return this._state_factory\n  }\n\n  getStateManager() {\n    return this._state_factory\n  }\n\n  clearAll() {\n    this._components = {}\n  }\n\n  registerComponent(component) {\n    /**\n     * Adds component to layout manager of any type.\n     * Specific types in TYPES are specifically used when automatically generating the layout using AI.\n     */\n\n    // attach managers and factory\n    component.manager = this\n\n    if (typeof component.component === 'function') {\n      this._components[component.type] = component\n    } else {\n      console.error(\n        'Could not register ' + component.type + ' since it was not a function'\n      )\n    }\n  }\n\n  getComponentTypes() {\n    return Object.keys(this._components)\n  }\n\n  getComponents() {\n    return this._components\n  }\n\n  getComponent(component_type) {\n    return this._components[component_type]\n  }\n\n  getComponentInstance(component_type, parameters) {\n    // validate parameter inputs\n    console.info(component_type, parameters)\n    // paramters\n    parameters.manager = this\n    // create component\n    const c = this._components[component_type]\n    if (c) {\n      // if React component is of type class\n      if (c.is_withclass) {\n        return c.component\n      } else {\n        // if React component is of type function\n        // eslint-disable-next-line new-cap\n        return new c.component(parameters)\n      }\n    } else {\n      console.warn(\n        'Component instance not registered of type: ' + component_type\n      )\n    }\n  }\n\n  collectComponentInventory() {\n    const store = {}\n    for (const [key, comp] of Object.entries(this._components)) {\n      const cfg = comp.config\n      if (cfg && key && cfg.type) {\n        let parents = ''\n        if (cfg.relation) {\n          parents = cfg.relation.within\n        }\n        store[cfg.type] = {\n          id: cfg.type,\n          title: cfg.name,\n          type: cfg.type,\n          events: comp.events,\n          actions: comp.triggers,\n          category: 'TBD',\n          parent: parents,\n          schema: cfg.options\n        }\n        // also add the children\n        if (cfg.contains) {\n          for (const [key_itm, comp] of Object.entries(cfg.contains)) {\n            const itm = cfg.contains[key_itm]\n            store[key_itm] = {\n              id: key_itm,\n              title: itm.title || itm.id,\n              category: 'TBD',\n              type: key_itm,\n              parent: cfg.type,\n              schema: comp\n            }\n          }\n        }\n      }\n    }\n    return store\n  }\n}\n\nexport default { ComponentManager }\n"],"names":["StateManager","_classCallCheck","this","_defineProperty","_createClass","key","value","state_id","_states","props","createManager","id","props_array","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","componentManagerInstance","Manager","ComponentManager","getInstance","_component","getComponent","type","config","state_inst","getManager","state","manager","createStateByClass","registerComponent","Error","StateClass","layout_tree","_this","walkLayout","data","content","actions","createState","_instance","layt","callback","_walk","_layt","d","StateManager$1","_event_manager","_state_factory","_components","component","console","error","Object","keys","component_type","parameters","info","c","is_withclass","warn","store","entries","_i","_Object$entries","length","_Object$entries$_i","_slicedToArray","comp","cfg","parents","relation","within","title","name","events","triggers","category","parent","schema","options","contains","_i2","_Object$entries2","_Object$entries2$_i","key_itm","itm","Event","EventManager"],"mappings":"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"}