{"version":3,"file":"Layout.js","sources":["../../src/layout/Layout.js"],"sourcesContent":["import React from 'react'\nimport Manager from './Manager'\n\nexport function LayoutRender(\n  container_id,\n  data,\n  classes,\n  config,\n  component_manger,\n  wrapper = 'div',\n  ignore = []\n) {\n  const content = [] // rendered content\n  if (!component_manger) {\n    throw new Error('Manager was not passed to LayoutRender')\n  }\n  console.info('-----------FIXME: TODO: IS THIS CODE USED?-----------')\n  for (const item of config.layout) {\n    if (!item) {\n      continue\n    }\n    // check if we should skip generating this item by request of the caller. Example dont allow card action to have another card\n    if (ignore.indexOf(item.type) > -1) {\n      console.warn(\n        'Using item type=' +\n          item.type +\n          ' not supported in layout for ' +\n          container_id\n      )\n      continue\n    }\n    // create a component identifier\n    const id = container_id + (item.id || item.type)\n\n    // build the component\n    if (item.type === 'layout') {\n      content.push(\n        <Layouter\n          id={id}\n          key={id}\n          classes={classes}\n          data={data}\n          manager={component_manger}\n          config={item.config}\n        />\n      )\n    } else {\n      const item_data = data || {}\n      const params = {\n        id: id,\n        key: id,\n        classes: classes,\n        manager: component_manger,\n        data: item.data || item_data[item.pick] || item_data,\n        config: item.config\n      }\n      const component =\n        Manager.ComponentManager.getInstance().getComponentInstance(\n          item.type,\n          params\n        )\n      if (component) {\n        content.push(component)\n      } else {\n        // TODO: notify missing component with type\n      }\n    }\n  }\n  return <div>{content}</div>\n}\n\nexport function Layouter(props) {\n  // style\n  const classes = {}\n  // recursive render\n  return LayoutRender(\n    props.id,\n    props.data,\n    classes,\n    props.config,\n    props.manager,\n    'div'\n  )\n}\n\nexport default { LayoutRender, Layouter }\n"],"names":["LayoutRender","container_id","data","classes","config","component_manger","ignore","content","Error","console","info","_step","layout","_iterator","s","n","done","item","value","indexOf","type","warn","id","push","React","createElement","Layouter","key","manager","item_data","params","pick","component","Manager","ComponentManager","getInstance","getComponentInstance","err","e","f","props","Layout"],"mappings":"0SAGO,SAASA,EACdC,EACAC,EACAC,EACAC,EACAC,GACe,IACfC,yDAAS,GAEHC,EAAU,GAChB,IAAKF,EACH,MAAM,IAAIG,MAAM,0CAElBC,QAAQC,KAAK,yDAAwD,IACrCC,EAAbP,EAAAA,EAAAA,2BAAAA,EAAOQ,QAAM,IAAhC,IAAkCC,EAAAC,MAAAH,EAAAE,EAAAE,KAAAC,MAAA,CAAA,IAAvBC,EAAIN,EAAAO,MACb,GAAKD,EAIL,GAAIX,EAAOa,QAAQF,EAAKG,OAAS,EAC/BX,QAAQY,KACN,mBACEJ,EAAKG,KACL,gCACAnB,OALN,CAUA,IAAMqB,EAAKrB,GAAgBgB,EAAKK,IAAML,EAAKG,MAG3C,GAAkB,WAAdH,EAAKG,KACPb,EAAQgB,KACNC,UAAAC,cAACC,EAAQ,CACPJ,GAAIA,EACJK,IAAKL,EACLnB,QAASA,EACTD,KAAMA,EACN0B,QAASvB,EACTD,OAAQa,EAAKb,cAGZ,CACL,IAAMyB,EAAY3B,GAAQ,GACpB4B,EAAS,CACbR,GAAIA,EACJK,IAAKL,EACLnB,QAASA,EACTyB,QAASvB,EACTH,KAAMe,EAAKf,MAAQ2B,EAAUZ,EAAKc,OAASF,EAC3CzB,OAAQa,EAAKb,QAET4B,EACJC,UAAQC,iBAAiBC,cAAcC,qBACrCnB,EAAKG,KACLU,GAEAE,GACFzB,EAAQgB,KAAKS,EAIjB,CApCA,CAqCF,CAAC,CAAA,MAAAK,GAAAxB,EAAAyB,EAAAD,EAAA,CAAA,QAAAxB,EAAA0B,GAAA,CACD,OAAOf,EAAA,QAAAC,cAAA,MAAA,KAAMlB,EACf,CAEO,SAASmB,EAASc,GAIvB,OAAOxC,EACLwC,EAAMlB,GACNkB,EAAMtC,KAJQ,CAAA,EAMdsC,EAAMpC,OACNoC,EAAMZ,QACN,MAEJ,CAEA,IAAea,EAAA,CAAEzC,aAAAA,EAAc0B,SAAAA"}