{"version":3,"file":"StateManager-3e28b6d9.js","sources":["../src/layout/Manager.js","../src/event/StateManager.js"],"sourcesContent":["import Event from '../event/Event'\nimport StateManager from '../event/StateManager'\n\nclass ComponentManager {\n  static _instance = null\n\n  _components = {}\n\n  /**\n   * @returns {ComponentManager}\n   */\n  static getInstance() {\n    if (ComponentManager._instance === null) {\n      ComponentManager._instance = new ComponentManager()\n      ComponentManager._instance._event_manager =\n        Event.EventManager.getInstance()\n      ComponentManager._instance._state_factory =\n        StateManager.StateManager.getInstance()\n    }\n\n    return this._instance\n  }\n\n  getEventManager() {\n    return this._event_manager\n  }\n\n  getStateFactory() {\n    return this._state_factory\n  }\n\n  getStateManager() {\n    return this._state_factory\n  }\n\n  clearAll() {\n    this._components = {}\n  }\n\n  registerComponent(component) {\n    /**\n     * Adds component to layout manager of any type.\n     * Specific types in TYPES are specifically used when automatically generating the layout using AI.\n     */\n\n    // attach managers and factory\n    component.manager = this\n\n    if (typeof component.component === 'function') {\n      this._components[component.type] = component\n    } else {\n      console.error(\n        'Could not register ' + component.type + ' since it was not a function'\n      )\n    }\n  }\n\n  getComponentTypes() {\n    return Object.keys(this._components)\n  }\n\n  getComponents() {\n    return this._components\n  }\n\n  getComponent(component_type) {\n    return this._components[component_type]\n  }\n\n  getComponentInstance(component_type, parameters) {\n    // validate parameter inputs\n    console.info(component_type, parameters)\n    // paramters\n    parameters.manager = this\n    // create component\n    const c = this._components[component_type]\n    if (c) {\n      // if React component is of type class\n      if (c.is_withclass) {\n        return c.component\n      } else {\n        // if React component is of type function\n        // eslint-disable-next-line new-cap\n        return new c.component(parameters)\n      }\n    } else {\n      console.warn(\n        'Component instance not registered of type: ' + component_type\n      )\n    }\n  }\n\n  collectComponentInventory() {\n    const store = {}\n    for (const [key, comp] of Object.entries(this._components)) {\n      const cfg = comp.config\n      if (cfg && key && cfg.type) {\n        let parents = ''\n        if (cfg.relation) {\n          parents = cfg.relation.within\n        }\n        store[cfg.type] = {\n          id: cfg.type,\n          title: cfg.name,\n          type: cfg.type,\n          events: comp.events,\n          actions: comp.triggers,\n          category: 'TBD',\n          parent: parents,\n          schema: cfg.options\n        }\n        // also add the children\n        if (cfg.contains) {\n          for (const [key_itm, comp] of Object.entries(cfg.contains)) {\n            const itm = cfg.contains[key_itm]\n            store[key_itm] = {\n              id: key_itm,\n              title: itm.title || itm.id,\n              category: 'TBD',\n              type: key_itm,\n              parent: cfg.type,\n              schema: comp\n            }\n          }\n        }\n      }\n    }\n    return store\n  }\n}\n\nwindow.componentManager = ComponentManager\nexport default { ComponentManager }\n","import Manager from '../layout/Manager'\n\nclass StateManager {\n  static _instance = null\n\n  _states = {}\n\n  /**\n   * @returns {StateManager}\n   */\n  static getInstance() {\n    if (StateManager._instance === null) {\n      StateManager._instance = new StateManager()\n    }\n\n    return this._instance\n  }\n\n  getManager(state_id) {\n    return this._states[state_id]\n  }\n\n  clearAll() {}\n\n  createState(props) {\n    return this.createManager(props.id, props)\n  }\n\n  createStates(props_array) {\n    for (const props of props_array) {\n      this.createManager(props.id, props)\n    }\n  }\n\n  createManager(state_id, props) {\n    const componentManagerInstance = Manager.ComponentManager.getInstance()\n    const _component = componentManagerInstance.getComponent(props.type)\n    if (_component) {\n      const config = _component.config\n      let state_inst = this.getManager(state_id)\n      if (state_inst) {\n        // TODO: warn that we are trying to create a manager that exists\n        return state_inst\n      } else {\n        if (config.state) {\n          // make sure to pass component manager\n          if (!props.manager) {\n            props.manager = componentManagerInstance\n          }\n          // create the class\n          state_inst = this.createStateByClass(config.state, props)\n          if (state_inst.registerComponent) {\n            state_inst.registerComponent({}, {}, config)\n          }\n          this._states[state_id] = state_inst\n        }\n        return state_inst\n      }\n    } else {\n      throw new Error('Component type does not exist: ' + props.type)\n    }\n  }\n\n  createStateByClass(StateClass, props) {\n    if (StateClass) {\n      return new StateClass(props)\n    }\n    return null\n  }\n\n  // TODO: create state statemanagers from layout tree\n  createLayoutState(layout_tree) {\n    walkLayout(layout_tree, (props) => {\n      if (\n        props.type &&\n        props.id &&\n        props.config &&\n        (props.data || props.content || props.actions)\n      ) {\n        this.createState(props)\n      }\n    })\n  }\n}\n\nexport const walkLayout = (layt, callback) => {\n  const _walk = (_layt) => {\n    for (const d in _layt) {\n      if (callback && _layt[d]) {\n        callback(_layt[d])\n      }\n      if (_layt[d].data) {\n        _walk(_layt[d].data)\n      }\n      if (_layt[d].content) {\n        _walk([_layt[d].content])\n      }\n      if (_layt[d].actions) {\n        _walk([_layt[d].actions])\n      }\n    }\n  }\n  _walk(layt)\n}\n\nexport default { StateManager, walkLayout }\n"],"names":["ComponentManager","_classCallCheck","this","_defineProperty","_createClass","key","value","_event_manager","_state_factory","_components","component","manager","type","console","error","Object","keys","component_type","parameters","info","c","is_withclass","warn","store","entries","_i","_Object$entries","length","_Object$entries$_i","_slicedToArray","comp","cfg","config","parents","relation","within","id","title","name","events","actions","triggers","category","parent","schema","options","contains","_i2","_Object$entries2","_Object$entries2$_i","key_itm","itm","_instance","Event","EventManager","getInstance","StateManager","window","componentManager","Manager","state_id","_states","props","createManager","props_array","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","componentManagerInstance","_component","getComponent","state_inst","getManager","state","createStateByClass","registerComponent","Error","StateClass","layout_tree","_this","walkLayout","data","content","createState","layt","callback","_walk","_layt","d","StateManager$1"],"mappings":"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"}