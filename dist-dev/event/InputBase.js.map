{"version":3,"file":"InputBase.js","sources":["../../src/event/InputBase.js"],"sourcesContent":["// common tools\nimport StateBase from './StateBase'\nimport StateBaseComponent from './StateBaseComponent'\n// event handler\n// import Event from './Event'\n\nconst events = {\n  changed: {\n    alias: [],\n    info: {\n      name: 'Changed',\n      description: 'Input value changed'\n    },\n    schema: {}\n  },\n  enabled: {\n    alias: [],\n    info: {\n      name: 'Enabled',\n      description: 'Enabled input'\n    },\n    schema: {}\n  },\n  disabled: {\n    alias: [],\n    info: {\n      name: 'Disabled',\n      description: 'Disabled input'\n    },\n    schema: {}\n  },\n  submitted: {\n    alias: [],\n    info: {\n      name: 'Submitted',\n      description: 'Submitted value'\n    },\n    schema: {}\n  },\n  cleared: {\n    alias: [],\n    info: {\n      name: 'Cleared',\n      description: 'Cleared value'\n    },\n    schema: {}\n  },\n  populated: {\n    alias: [],\n    info: {\n      name: 'Populated',\n      description: 'Populated value'\n    },\n    schema: {}\n  },\n  replaced: {\n    alias: [],\n    info: {\n      name: 'Replaced',\n      description: 'Replaced value'\n    },\n    schema: {}\n  },\n  invalidated: {\n    alias: [],\n    info: { name: 'In-validated', description: 'Unselecting item' },\n    schema: {}\n  },\n  validated: {\n    alias: [],\n    info: { name: 'De-Selected', description: 'Unselecting item' },\n    schema: {}\n  }\n}\n\nconst triggers = {\n  submit: {\n    info: { name: 'Submit', description: 'Submits the form data' },\n    schema: {},\n    alias: []\n  },\n  enable: {\n    info: {\n      name: 'Enables',\n      description: 'Enables the form so that we can change form inputs'\n    },\n    schema: {},\n    alias: []\n  },\n  disable: {\n    info: {\n      name: 'Disable',\n      description: 'Disables the form so that we can not change input value'\n    },\n    schema: {},\n    alias: []\n  },\n  // change: { info: { name: 'Change', description: 'Changes' }, schema: {}, alias: [] },\n  clear: {\n    info: {\n      name: 'Clear',\n      description: 'Removes all input values clearing the form'\n    },\n    schema: {},\n    alias: []\n  },\n  populate: {\n    info: {\n      name: 'Populate',\n      description: 'Fills the form with specified data'\n    },\n    schema: {},\n    alias: []\n  },\n  replace: {\n    info: {\n      name: 'Replace',\n      description: 'Replaces the form with specified data'\n    },\n    schema: {},\n    alias: []\n  }\n}\n\nclass StateInput extends StateBase.StateInstance {\n  constructor(props) {\n    super(props)\n    this.props = props\n    // apply initial values\n    this.state = {\n      data: {\n        id: props.data.id || null,\n        value: props.data.value,\n        schema: props.data.schema || props.schema\n      },\n      enabled: (props.config || {}).enabled || true,\n      schema: props.schema\n    }\n\n    if (!this.props.manager) {\n      throw new Error('Manager was not passed through StateInput props')\n    }\n\n    this.eventManager = this.props.manager.getEventManager()\n  }\n\n  registerComponent = (actionHandlers, eventHandlers, component_info) => {\n    const self = this\n    actionHandlers = actionHandlers || {}\n    eventHandlers = eventHandlers || {}\n    // add our known handlers\n    // register componenet overiding or adding new event handlers\n    const dataActionHandlers = {\n      submit: {\n        schema: {},\n        handler: (obj) => {\n          // Event.EventManager.getInstance().addEvent(\n          this.eventManager.addEvent(this.props.id, 'submitting', obj, null)\n          this.getActionState('submit', function (change) {\n            const update = self.alterState(change)\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(\n              self.props.id,\n              'submitted',\n              update.data,\n              null\n            )\n          })\n        }\n      },\n      enable: {\n        schema: {},\n        handler: (obj) => {\n          const change = { disabled: false }\n          self.alterState(change)\n          if (this.updateView('enable', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'enabled', change, null)\n          }\n        }\n      },\n      disable: {\n        schema: {},\n        handler: (obj) => {\n          const change = { disabled: true }\n          self.alterState(change)\n          if (this.updateView('disable', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'disabled', change, null)\n          }\n        }\n      },\n      clear: {\n        schema: {},\n        handler: (obj) => {\n          const change = { data: { value: '' } } // getSchemaDefaults(this.state.data.schema || this.state.schema);\n          const update = self.alterState(change)\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'clearing', change, {})\n          if (self.updateView('clear', obj, obj, update)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(\n              self.props.id,\n              'cleared',\n              update.data,\n              null\n            )\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(\n            self.props.id,\n            'changed',\n            update.data,\n            null\n          )\n        }\n      },\n      populate: {\n        schema: {},\n        handler: (obj) => {\n          const change = { data: { value: obj.value, id: obj.id } }\n          self.alterState(change)\n          if (self.updateView('populate', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'populated', obj, null)\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'changed', obj, null)\n        }\n      },\n      replace: {\n        schema: {},\n        handler: (obj) => {\n          const replaced = {\n            ...self.state,\n            data: {\n              ...obj,\n              id: obj.id,\n              value: obj.value || this.state.data.value,\n              schema: obj.schema || this.state.data.schema\n            }\n          }\n          self.setState(replaced)\n          if (self.updateView('replace', obj, obj, self.state.data)) {\n            // Event.EventManager.getInstance().addEvent(\n            self.eventManager.addEvent(self.props.id, 'replaced', obj, null)\n          }\n          // Event.EventManager.getInstance().addEvent(\n          self.eventManager.addEvent(self.props.id, 'changed', obj, null)\n        }\n      }\n    }\n\n    // register componenet overiding or adding new event handlers\n    // this.ddEvent = Event.EventManager.getInstance().register(\n    self.ddEvent = self.eventManager.register(\n      self.props.id,\n      { ...dataActionHandlers, ...actionHandlers },\n      { ...events, ...eventHandlers },\n      component_info\n    )\n    return self.ddEvent\n  }\n}\n\nclass InputBase extends StateBaseComponent.StateBaseComponent {\n  /**\n   * Used to manage internal state of avatars\n   */\n  constructor(props) {\n    if (!props.config.options) {\n      props.config.options = {}\n    }\n    super(props)\n    this.props = props\n  }\n\n  updateView = (action, arr, updated, data) => {\n    // extend by parent\n    return true\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default { events, triggers, StateInput, InputBase }\n"],"names":["events","changed","alias","info","name","description","schema","enabled","disabled","submitted","cleared","populated","replaced","invalidated","validated","StateInput","props","_this","_classCallCheck","this","_super","call","_defineProperty","_assertThisInitialized","actionHandlers","eventHandlers","component_info","self","dataActionHandlers","submit","handler","obj","eventManager","addEvent","id","getActionState","change","update","alterState","data","enable","updateView","state","disable","clear","value","populate","replace","_objectSpread","_objectSpread2","setState","ddEvent","register","config","manager","Error","getEventManager","StateBase","StateInstance","InputBase","_this2","options","_super2","action","arr","updated","StateBaseComponent","InputBase$1","triggers"],"mappings":"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"}